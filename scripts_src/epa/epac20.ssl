/*
  ***   Script conwerted to Interplay format by Fallout Script Edytor (by Jargo)  ***
*/

#define SCRIPT_REALNAME "epac20"
#include "../headers/define.h"
//#include "../headers/<TownMapName.h>"

#define NAME                    SCRIPT_EPAC20          //Script name from scripts.h
#define TOWN_REP_VAR            GVAR_TOWN_REP_           //Global variable name for this Town

#include "../headers/command.h"
#include "../headers/modreact.h"
#include "../headers/partybkg.h"

#define LVAR_Herebefore                 (4)
#define LVAR_Hostile                    (5)
#define LVAR_Personal_Enemy             (6)

procedure start;
procedure critter_p_proc;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;

procedure start
begin
  if (cur_map_index == MAP_EPA) then
    add_timer_event(self_obj, game_ticks(5), 1);
  else if( cur_map_index == MAP_EPA_SUBLEVELS_1 or cur_map_index == MAP_EPA_SUBLEVELS_2) then
  begin
    if (self_elevation == 0) then
      add_timer_event(self_obj, game_ticks(5), 5);
    else if (self_elevation == 2) then
      add_timer_event(self_obj, game_ticks(5), 9);
  end
end

procedure critter_p_proc
begin
  if (global_var(GVAR_FIX_VOICECOMP) == 5) then
    destroy_object(self_obj);
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
end

procedure description_p_proc
begin
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
  if (source_obj == dude_obj) then
    attack(dude_obj);
end

procedure map_enter_p_proc
begin

  if (cur_map_index == MAP_EPA) then
    add_timer_event(self_obj, game_ticks(5), 1);
  else if( cur_map_index == MAP_EPA_SUBLEVELS_1 or cur_map_index == MAP_EPA_SUBLEVELS_2) then
  begin
    if (self_elevation == 0) then
      add_timer_event(self_obj, game_ticks(5), 5);
    else if (self_elevation == 2) then
      add_timer_event(self_obj, game_ticks(5), 9);
  end

end

procedure map_update_p_proc
begin
end

procedure talk_p_proc
begin
end

#define walk_next_point(param, tile, next_param) \
  if (fixed_param == param) then begin \
    if ((not is_critter_prone(self_obj)) and not combat_is_initialized) then begin \
      reg_anim_clear( self_obj); \
      reg_anim_begin(); \
        self_walk_to_tile(tile); \
      reg_anim_end(); \
    end \
    add_timer_event(self_obj, game_ticks(20), next_param); \
  end

procedure timed_event_p_proc begin
  walk_next_point(1, 16083, 2)
  walk_next_point(2, 16132, 3)
  walk_next_point(3, 20933, 4)
  walk_next_point(4, 20683, 1)
  walk_next_point(5, 16066, 6)
  walk_next_point(6, 18479, 7)
  walk_next_point(7, 26682, 8)
  walk_next_point(8, 26067, 5)
  walk_next_point(9, 22515, 10)
  walk_next_point(10, 18714, 11)
  walk_next_point(11, 19126, 12)
  walk_next_point(12, 22126, 13)
  walk_next_point(13, 22298, 9)
end
